# Default values for crawler chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: your-docker-registry/crawler # TODO: Replace with your actual image repository
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "" # TODO: Replace with your desired image tag or leave empty to use appVersion

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Environment variables to pass to the crawler container
# These should ideally be sourced from secrets in a real deployment
env:
  # Example: Sourced from environment or secrets
  REDIS_URL: "redis://redis:6379" # TODO: Update with actual Redis URL or secret reference
  GCS_BUCKET_NAME: "your-gcs-bucket-name" # TODO: Update with actual bucket name or secret reference
  USER_AGENT: "ComplianceScraper/1.0 (+mailto:travis@10xtravel.com)"
  # Add other necessary environment variables here
  # e.g., DATABASE_URL, GOOGLE_APPLICATION_CREDENTIALS path (if using service account key file)

# Service account configuration (if needed for GCS/other cloud access)
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Resources requests and limits for the container
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}
